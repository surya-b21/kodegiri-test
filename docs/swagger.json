{
    "swagger": "2.0",
    "info": {
        "description": "for test purpose",
        "title": "Kodegiri App",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api",
    "paths": {
        "/login": {
            "post": {
                "description": "Get token for auth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login function",
                "parameters": [
                    {
                        "description": "Login Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/loyalty-program": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all loyalty program list",
                "tags": [
                    "LoyaltyProgram"
                ],
                "summary": "List Loyalty Program",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.LoyaltyProgram"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Store a loyalty program",
                "tags": [
                    "LoyaltyProgram"
                ],
                "summary": "Store Loyalty Program",
                "parameters": [
                    {
                        "description": "Loyalty Program Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/loyaltyprogram.LoyaltyProgramPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/member-activity": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get token for auth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Login function",
                "parameters": [
                    {
                        "description": "Member Activity Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/community.MemberActivityPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/member-get-member": {
            "post": {
                "description": "Store a Member Get Member",
                "tags": [
                    "Community"
                ],
                "summary": "StoreMemberGetMember function",
                "parameters": [
                    {
                        "description": "Member Activity Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/community.MemberGetMemberPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/membership": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all membership list",
                "tags": [
                    "Membership"
                ],
                "summary": "Membership List function",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/membership/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get membership detail",
                "tags": [
                    "Membership"
                ],
                "summary": "Membership Detail function",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/redeem-point": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Store a reedemed point",
                "tags": [
                    "ReedemedPoint"
                ],
                "summary": "ReedemedPointStore function",
                "parameters": [
                    {
                        "description": "Member Activity Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/redeemedpoint.ReedemedPointPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/report": {
            "get": {
                "description": "Get list of report",
                "tags": [
                    "Report"
                ],
                "summary": "ListReport function",
                "parameters": [
                    {
                        "type": "string",
                        "description": "earned or redeemed",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "member number",
                        "name": "member_no",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "15022023",
                        "name": "dateStart",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "15022023",
                        "name": "dateEnd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "gt, lt, e, gte, lte",
                        "name": "operator",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "operator value",
                        "name": "operator_value",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "loyalty program id",
                        "name": "loyalty_program_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/tier-management": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all tier list",
                "tags": [
                    "TierManagement"
                ],
                "summary": "Tier List function",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Tier"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Store a tier",
                "tags": [
                    "TierManagement"
                ],
                "summary": "Tier Store function",
                "parameters": [
                    {
                        "description": "Member Activity Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TierAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tier"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/tier-management/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a tier detail",
                "tags": [
                    "TierManagement"
                ],
                "summary": "Tier Detail function",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tier id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tier"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a tier",
                "tags": [
                    "TierManagement"
                ],
                "summary": "Tier Update function",
                "parameters": [
                    {
                        "description": "Member Activity Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TierAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tier"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a tier",
                "tags": [
                    "TierManagement"
                ],
                "summary": "Tier Delete function",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tier id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/transaction": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Store a transaction",
                "tags": [
                    "StoreTransaction"
                ],
                "summary": "StoreTransaction function",
                "parameters": [
                    {
                        "description": "Member Activity Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.TransactionPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "remember_token": {
                    "type": "string"
                }
            }
        },
        "community.MemberActivityPayload": {
            "type": "object",
            "properties": {
                "activity_name": {
                    "type": "string"
                },
                "member_id": {
                    "type": "string"
                }
            }
        },
        "community.MemberGetMemberPayload": {
            "type": "object",
            "properties": {
                "member_id": {
                    "type": "string"
                },
                "person_email": {
                    "type": "string"
                },
                "person_name": {
                    "type": "string"
                },
                "person_phone_number": {
                    "type": "string"
                }
            }
        },
        "loyaltyprogram.LoyaltyProgramPayload": {
            "type": "object",
            "properties": {
                "benefit_community_fixed_point": {
                    "type": "integer"
                },
                "benefit_transaction_fixed_point": {
                    "type": "integer"
                },
                "benefit_transaction_precentage": {
                    "type": "integer"
                },
                "loyalty_end": {
                    "type": "string",
                    "format": "date-time"
                },
                "loyalty_start": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "policy_birthday_bonus": {
                    "type": "boolean"
                },
                "policy_is_community_activity": {
                    "type": "boolean"
                },
                "policy_is_community_member_get_member": {
                    "type": "boolean"
                },
                "policy_is_transaction_first_purchase": {
                    "type": "boolean"
                },
                "policy_transaction_amount": {
                    "type": "integer"
                },
                "policy_transaction_qty": {
                    "type": "integer"
                },
                "tier": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LoyaltyProgramTierAPI"
                    }
                }
            }
        },
        "model.LoyaltyProgram": {
            "type": "object",
            "properties": {
                "benefit_community_fixed_point": {
                    "type": "integer"
                },
                "benefit_transaction_fixed_point": {
                    "type": "integer"
                },
                "benefit_transaction_precentage": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "loyaltyProgramTier": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LoyaltyProgramTier"
                    }
                },
                "loyalty_end": {
                    "type": "string",
                    "format": "date-time"
                },
                "loyalty_start": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "policy_birthday_bonus": {
                    "type": "boolean"
                },
                "policy_is_community_activity": {
                    "type": "boolean"
                },
                "policy_is_community_member_get_member": {
                    "type": "boolean"
                },
                "policy_is_transaction_first_purchase": {
                    "type": "boolean"
                },
                "policy_transaction_amount": {
                    "type": "integer"
                },
                "policy_transaction_qty": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "model.LoyaltyProgramTier": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "loyaltyProgram": {
                    "$ref": "#/definitions/model.LoyaltyProgram"
                },
                "loyalty_program_id": {
                    "type": "string"
                },
                "tier": {
                    "$ref": "#/definitions/model.Tier"
                },
                "tier_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "model.LoyaltyProgramTierAPI": {
            "type": "object",
            "properties": {
                "loyalty_program_id": {
                    "type": "string"
                },
                "tier_id": {
                    "type": "string"
                }
            }
        },
        "model.Tier": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "maximal_point": {
                    "type": "integer"
                },
                "minimal_point": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "model.TierAPI": {
            "type": "object",
            "properties": {
                "maximal_point": {
                    "type": "integer"
                },
                "minimal_point": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.TransactionItemAPI": {
            "type": "object",
            "properties": {
                "item_name": {
                    "type": "string"
                },
                "item_price": {
                    "type": "integer"
                },
                "item_qty": {
                    "type": "integer"
                },
                "item_subtotal": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "redeemedpoint.ReedemedPointPayload": {
            "type": "object",
            "properties": {
                "member_id": {
                    "type": "string"
                },
                "redeemed_point": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "transaction.TransactionPayload": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TransactionItemAPI"
                    }
                },
                "total_amount": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}