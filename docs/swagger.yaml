basePath: /api
definitions:
  auth.LoginPayload:
    properties:
      email:
        type: string
      password:
        type: string
      remember_token:
        type: string
    type: object
  community.MemberActivityPayload:
    properties:
      activity_name:
        type: string
      member_id:
        type: string
    type: object
  model.LoyaltyProgram:
    properties:
      benefit_community_fixed_point:
        type: integer
      benefit_transaction_fixed_point:
        type: integer
      benefit_transaction_precentage:
        type: integer
      created_at:
        format: date-time
        type: string
      id:
        format: uuid
        type: string
      loyalty_end:
        type: string
      loyalty_start:
        type: string
      loyaltyProgramTier:
        items:
          $ref: '#/definitions/model.LoyaltyProgramTier'
        type: array
      name:
        type: string
      policy_birthday_bonus:
        type: boolean
      policy_is_community_activity:
        type: boolean
      policy_is_community_member_get_member:
        type: boolean
      policy_is_transaction_first_purchase:
        type: boolean
      policy_transaction_amount:
        type: integer
      policy_transaction_qty:
        type: integer
      updated_at:
        format: date-time
        type: string
    type: object
  model.LoyaltyProgramTier:
    properties:
      created_at:
        format: date-time
        type: string
      id:
        format: uuid
        type: string
      loyalty_program_id:
        type: string
      loyaltyProgram:
        $ref: '#/definitions/model.LoyaltyProgram'
      tier:
        $ref: '#/definitions/model.Tier'
      tier_id:
        type: string
      updated_at:
        format: date-time
        type: string
    type: object
  model.Tier:
    properties:
      created_at:
        format: date-time
        type: string
      id:
        format: uuid
        type: string
      maximal_point:
        type: integer
      minimal_point:
        type: integer
      name:
        type: string
      updated_at:
        format: date-time
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: for test purpose
  title: Kodegiri App
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Get token for auth
      parameters:
      - description: Login Payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Login function
      tags:
      - Auth
  /loyalty-program:
    get:
      description: Get all loyalty program list
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.LoyaltyProgram'
            type: array
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: LoyaltiProgramList function
      tags:
      - LoyaltyProgram
    post:
      description: Store a loyalty program
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: LoyaltyPrograStore function
      tags:
      - LoyaltyProgram
  /member-activity:
    post:
      consumes:
      - application/json
      description: Get token for auth
      parameters:
      - description: Member Activity Payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/community.MemberActivityPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Login function
      tags:
      - Auth
  /member-get-member:
    post:
      description: Store a Member Get Member
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: StoreMemberGetMember function
      tags:
      - Community
  /membership:
    get:
      description: Get all membership list
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Membership List function
      tags:
      - Membership
  /membership/{id}:
    get:
      description: Get membership detail
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Membership Detail function
      tags:
      - Membership
  /redeem-point:
    post:
      description: Store a reedemed point
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: ReedemedPointStore function
      tags:
      - ReedemedPointStore
  /report:
    get:
      description: Get list of report
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: ListReport function
      tags:
      - Report
  /tier-management:
    get:
      description: Get all tier list
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Tier'
            type: array
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Tier List function
      tags:
      - TierManagement
    post:
      description: Store a tier
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tier'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Tier Store function
      tags:
      - TierManagement
  /tier-management/{id}:
    delete:
      description: Delete a tier
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Tier Delete function
      tags:
      - TierManagement
    get:
      description: Get a tier detail
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tier'
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Tier Detail function
      tags:
      - TierManagement
    put:
      description: Update a tier
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tier'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Tier Update function
      tags:
      - TierManagement
  /transaction:
    post:
      description: Store a transaction
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: StoreTransaction function
      tags:
      - StoreTransaction
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
